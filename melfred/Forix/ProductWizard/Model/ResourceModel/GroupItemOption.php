<?php


namespace Forix\ProductWizard\Model\ResourceModel;

class GroupItemOption extends \Magento\Framework\Model\ResourceModel\Db\AbstractDb
{

    protected $_date;

    protected $_groupFactory;

    protected $_wizardRepository;

    public function __construct(
        \Magento\Framework\Model\ResourceModel\Db\Context $context,
        \Magento\Framework\Stdlib\DateTime\DateTime $date,
        \Forix\ProductWizard\Model\GroupFactory $groupFactory,
        \Forix\ProductWizard\Model\WizardRepository $wizardRepository,
        $connectionName = null)
    {
        $this->_date = $date;
        $this->_groupFactory = $groupFactory;
        $this->_wizardRepository = $wizardRepository;
        parent::__construct($context, $connectionName);
    }

    /**
     * Define resource model
     *
     * @return void
     */
    protected function _construct()
    {
        $this->_init('forix_productwizard_group_item_option', 'group_item_option_id');
    }


    /**
     * @param $option
     * @return \Forix\ProductWizard\Api\Data\WizardInterface|\Forix\ProductWizard\Model\Wizard|null
     * @throws \Magento\Framework\Exception\LocalizedException
     */
    public function getWizard($option){
        $wizardId = $option->getWizardId();
        if($wizardId){
            return $this->_wizardRepository->getById($wizardId);
        }
        return null;
    }

    /**
     * @param $groupId
     * @return \Forix\ProductWizard\Model\Group|null
     */
    protected function getGroup($groupId)
    {
        $group = $this->_groupFactory->create()->load($groupId);
        if ($group->getId()) {
            return $group;
        }
        return null;
    }

    protected function _afterLoad(\Magento\Framework\Model\AbstractModel $object)
    {
        if ($object->getData('depend_on')) {
            $object->setData('depend_on', explode(',', $object->getData('depend_on')));
        } else {
            $object->setData('depend_on', []);
        }
        if ($object->getData('best_on')) {
            $object->setData('best_on', explode(',', $object->getData('best_on')));
        } else {
            $object->setData('best_on', []);
        }
        return parent::_afterLoad($object); // TODO: Change the autogenerated stub
    }

    function isJson($string)
    {
        $decoded = json_decode($string);
        if (!is_object($decoded) && !is_array($decoded)) {
            return false;
        }
        return (JSON_ERROR_NONE == json_last_error());
    }

    /**
     * @param \Magento\Framework\Model\AbstractModel $object
     * @return \Magento\Framework\Model\ResourceModel\Db\AbstractDb
     * @throws \Magento\Framework\Exception\LocalizedException
     */
    protected function _beforeSave(\Magento\Framework\Model\AbstractModel $object)
    {
        if(empty($object->getData('depend_on'))) {
            $depend_on = null;
        } elseif (is_string($object->getData('depend_on'))) {
            $depend_on = $object->getData('depend_on');
        } else {
            $depend_on = implode(',',$object->getData('depend_on'));
        }
        if ($this->isJson($depend_on)) {
            $depend_on = json_decode($depend_on, true);
        }
        $object->setData('depend_on', is_array($depend_on) ? implode(',', $depend_on) : $depend_on);

        if(empty($object->getData('best_on'))) {
            $best_on = null;
        } elseif (is_string($object->getData('best_on'))) {
            $best_on = $object->getData('best_on');
        } else {
            $best_on = implode(',',$object->getData('best_on'));
        }
        if ($this->isJson($best_on)) {
            $best_on = json_decode($best_on, true);
        }
        $object->setData('best_on', is_array($best_on) ? implode(',', $best_on) : $best_on);

        $group = $this->getGroup($object->getGroupId());
        if ($group) {
            $object->setData('wizard_id', $group->getData('wizard_id'));
        }

        if($object->getItemId() && !$object->getWizardId()) {
            $select = $this->_resources->getConnection()->select()->from($this->_resources->getTableName('forix_productwizard_group_item'), ['wizard_id'])->where('group_item_id=?',$object->getItemId());
            if($wizardId = $this->_resources->getConnection()->fetchOne($select)){
                $object->setData('wizard_id', $wizardId);
            }
        }
        if (!$object->getId()) {
            $object->setCreatedAt($this->_date->gmtDate());
        }
        $object->setUpdatedAt($this->_date->gmtDate());

        return parent::_beforeSave($object);
    }
}
